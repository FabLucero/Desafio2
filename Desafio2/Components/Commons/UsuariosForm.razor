using Desafio2.Database
using Desafio2.Models
@inject NavigationManager NavigationManager

<EditForm Model="Usuario" OnSubmit="CreateOrUpdateUser" FormName="usuarios-form">
    <div class="form-group">
        <label for="id">
            ID
            <InputNumber type="number" class="form-control" id="id" @bind-Value="Usuario.Id" />
        </label>
    </div>
    <div class="form-group">
        <label for="nombre">
            Nombre
            <InputText type="text" class="form-control" id="nombre" @bind-Value="Usuario.Nombre" />
        </label>
    </div>
    <div class="form-group">
        <label for="apellido">
            Apellido
            <InputText type="text" class="form-control" id="apellido" @bind-Value="Usuario.Apellido" />
        </label>
    </div>
    <div class="form-group">
        <label for="nombreUsuario">
            NombreUsuario
            <InputText type="text" class="form-control" id="nombreUsuario" @bind-Value="Usuario.NombreUsuario" />
        </label>
    </div>
    <div class="form-group">
        <label for="contraseña">
            Contraseña
            <InputText type="text" class="form-control" id="contraseña" @bind-Value="Usuario.Contraseña" />
        </label>
    </div>
    <div class="form-group">
        <label for="email">
            Email
            <InputText type="text" class="form-control" id="email" @bind-Value="Usuario.Email" />
        </label>
    </div>
    <button type="submit" class="btn btn-primary">Guardar</button>
</EditForm>

@code {

    private UsuarioData? dataAccess;

    [Parameter]
    public Usuario Usuario { get; set; }

    protected override void OnInitialized()
    {
        dataAccess = new UsuarioData();
    }

    public void CreateOrUpdateUser()
    {
        if (Usuario.Id > 0)
        {

            dataAccess.UpdateUser(Usuario.Id, Usuario);

        }
        else
        {
            dataAccess.CreateUser(Usuario);

        }

        NavigationManager.NavigateTo("/Usuarios");
    }
}